{"version":3,"sources":["webpack:///./src/components/card/card.js","webpack:///./src/components/card/card-header.js","webpack:///./src/components/card/card-body.js","webpack:///./src/components/card/card-footer.js","webpack:///./src/util/casing.js","webpack:///./src/pages/work.js","webpack:///./src/util/index.js"],"names":["Card","styled","div","theme","dark","border","radius","color","primary","white","light","propTypes","children","PropTypes","node","isRequired","elevate","bool","defaultProps","CardHeader","darkgrey","padding","normal","fgColor","string","bgColor","CardBodyContents","CardBody","style","image","CardFooter","left","center","right","black","module","exports","kebabCase","str","toLowerCase","replace","WorkPage","work","useWork","title","description","keywords","map","item","key","frontmatter","dangerouslySetInnerHTML","__html","html"],"mappings":"wOAGaA,EAAOC,IAAOC,IAAV,6DAAGD,EAAW,gBAAGE,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,sEAETD,EAAME,OAAOC,OAFJ,kJAQNF,EAAOD,EAAMI,MAAMC,QAAQJ,KAAOD,EAAMI,MAAME,OARxC,kBASjBL,EAAOD,EAAMI,MAAME,MAAQN,EAAMI,MAAMC,QAAQJ,MAT9B,oBAUfA,EAAO,IAAO,GAVC,wNAiBbD,EAAMI,MAAMC,QAAQE,MAjBP,qGAmBGP,EAAMI,MAAMC,QAAQE,MAnBvB,sKAwBGP,EAAMI,MAAMC,QAAQJ,KAxBvB,uDA6B/BJ,EAAKW,UAAY,CACbC,SAAUC,IAAUC,KAAKC,WACzBC,QAASH,IAAUI,KAAKF,YAG5Bf,EAAKkB,aAAe,CAChBF,SAAS,GCnCN,IAAMG,EAAalB,IAAOC,IAAV,6EAAGD,EAAW,gBAAGE,EAAH,EAAGA,MAAH,kIAKvBA,EAAMI,MAAMa,SALW,kDAMUjB,EAAMI,MAAME,MANtB,uHAWrBN,EAAMkB,QAAQC,OAXO,iCAerCH,EAAWR,UAAY,CACnBY,QAASV,IAAUW,OAAOT,WAC1BU,QAASZ,IAAUW,OAAOT,WAC1BH,SAAUC,IAAUC,KAAKC,YAG7BI,EAAWD,aAAe,CACtBK,QAAS,OACTE,QAAS,uBACTb,SAAU,I,gBCvBRc,EAAmBzB,IAAOC,IAAV,8EAAGD,EAAW,oDAAGE,MAEjBkB,QAAQC,OAFM,yCAMpCI,EAAiBf,UAAY,CACzBY,QAASV,IAAUW,OAAOT,WAC1BU,QAASZ,IAAUW,OAAOT,YAG9BW,EAAiBR,aAAe,CAC5BK,QAAS,UACTE,QAAS,QAGN,IAAME,EAAW,SAAC,GAAgC,IAA9Bf,EAA6B,EAA7BA,SAAiBgB,GAAY,EAAnBC,MAAmB,EAAZD,OACxC,OACI,wBAACF,EAAD,CAAkBE,MAAQA,GACpBhB,ICpBDkB,EAAa7B,IAAOC,IAAV,8EAAGD,EAAW,gBACjCE,EADiC,EACjCA,MADiC,EAEjC4B,KAFiC,wEAE3BC,QAIO,2BANoB,aAEnBC,OAKF,6BAPqB,2CASvB9B,EAAMI,MAAM2B,MATW,mDAWrB/B,EAAMkB,QAAQC,OAXO,4BAerCQ,EAAWnB,UAAY,CACnBY,QAASV,IAAUW,OAAOT,WAC1BU,QAASZ,IAAUW,OAAOT,WAC1BH,SAAUC,IAAUC,KAAKC,YAG7Be,EAAWZ,aAAe,CACtBK,QAAS,OACTE,QAAS,yB,+BC1BbU,EAAOC,QAAU,CACbC,UAAW,SAAAC,GAAG,OAAIA,EAAIC,cAAcC,QAAQ,MAAO,Q,kCCDvD,2GA6CeC,UApCE,WACb,IAAMC,EAAOC,cAEb,OACI,wBAAC,IAAD,KACI,wBAAC,IAAD,CACIC,MAAM,WACNC,YAAY,GACZC,SAAS,KAGb,wBAAC,IAAD,iBAEA,wBAAC,IAAD,CAAM1C,MAAI,GACN,wBAAC,IAAD,KACI,wBAAC,IAAD,2LAOJsC,EAAKK,KAAI,SAAAC,GAAI,OACT,wBAAC,IAAD,CAAMC,IAAMZ,oBAAUW,EAAKE,YAAYN,QACnC,wBAAC,IAAD,KAAcI,EAAKE,YAAYN,OAC/B,wBAAC,IAAD,KACI,+BAAKO,wBAAyB,CAAEC,OAAQJ,EAAKK,gB,kCCnCzE","file":"component---src-pages-work-js-373fc14209240d81f20a.js","sourcesContent":["import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nexport const Card = styled.div(({ theme, dark }) => `\n    // & * { border: 1px solid #f99; }\n    border-radius: ${ theme.border.radius };\n    overflow: hidden;\n    margin-bottom: 3rem;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    background-color: ${ dark ? theme.color.primary.dark : theme.color.white };\n    color: ${ dark ? theme.color.white : theme.color.primary.dark };\n    opacity: ${ dark ? 0.75 : 1.0 };\n    transition: filter 250ms;\n    filter: drop-shadow(0 0 4px rgba(0, 0, 0, 0.1));\n    &:hover {\n        filter: drop-shadow(0 0 6px rgba(0, 0, 0, 0.2));\n    }\n    a, a:active, a:visited {\n        color: ${ theme.color.primary.light };\n        transition: filter 250ms, text-decoration-color 250ms;\n        text-decoration-color: ${ theme.color.primary.light };\n        text-underline-offset: 0.1em;\n    }\n    a:hover, a:active:hover, a:visited:hover {\n        filter: brightness(1.25);\n        text-decoration-color: ${ theme.color.primary.dark };\n        text-underline-offset: 0.1em;\n    }\n`)\n\nCard.propTypes = {\n    children: PropTypes.node.isRequired,\n    elevate: PropTypes.bool.isRequired,\n}\n\nCard.defaultProps = {\n    elevate: true,\n}","import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nexport const CardHeader = styled.div(({ theme }) => `\n    display: flex;\n    // justify-content: center;\n    // align-items: center;\n    // text-align: left;\n    color: ${ theme.color.darkgrey };\n    background: linear-gradient(#f3ffff 0%, ${ theme.color.white } 100%);\n    font-weight: bold;\n    position: relative;\n    font-size: 200%;\n    min-height: 4rem;\n    padding: ${ theme.padding.normal };\n    padding-bottom: 0;\n`)\n\nCardHeader.propTypes = {\n    fgColor: PropTypes.string.isRequired,\n    bgColor: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nCardHeader.defaultProps = {\n    fgColor: '#fff',\n    bgColor: 'var(--color-crimson)',\n    children: '',\n}\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst CardBodyContents = styled.div(({ theme }) => `\n    flex: 1;\n    padding: ${ theme.padding.normal };\n    background-color: inherit;\n`)\n\nCardBodyContents.propTypes = {\n    fgColor: PropTypes.string.isRequired,\n    bgColor: PropTypes.string.isRequired,\n}\n\nCardBodyContents.defaultProps = {\n    fgColor: 'inherit',\n    bgColor: '#fff',\n}\n\nexport const CardBody = ({ children, image, style }) => {\n    return (\n        <CardBodyContents style={ style }>\n            { children }\n        </CardBodyContents>\n    )\n}\n","import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nexport const CardFooter = styled.div(({\n    theme,\n    left, center, right\n}) => `\n    display: flex;\n    justify-content: flex-start;\n    ${ center && 'justify-content: center' };\n    ${ right && 'justify-content: flex-end' };\n    align-items: center;\n    color: ${ theme.color.black };\n    background-color: inherit;\n    padding: ${ theme.padding.normal };\n    height: 4rem;\n`)\n\nCardFooter.propTypes = {\n    fgColor: PropTypes.string.isRequired,\n    bgColor: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nCardFooter.defaultProps = {\n    fgColor: '#fff',\n    bgColor: 'var(--color-crimson)',\n}\n\n","module.exports = {\n    kebabCase: str => str.toLowerCase().replace(/ +/g, '-')\n}\n","import React from 'react'\nimport { Title, Paragraph } from '../components/typography'\nimport { PageContent } from '../components/layout'\nimport { SEO } from '../components/seo'\nimport { Card, CardHeader, CardBody } from '../components/card'\nimport { ExternalLink } from '../components/link'\nimport { useWork } from '../hooks'\nimport { kebabCase } from '../util'\n\nconst WorkPage = () => {\n    const work = useWork()\n\n    return (\n        <PageContent>\n            <SEO \n                title=\"Our Work\"\n                description=\"\"\n                keywords=\"\"\n            />\n\n            <Title>Our Work</Title>\n\n            <Card dark>\n                <CardBody>\n                    <Paragraph>\n                        We will update this page with the latest projects coming out of RENCI as our researchers and their partners work together to develop novel approaches for dealing with COVID-19.\n                    </Paragraph>\n                </CardBody>\n            </Card>\n            \n            {\n                work.map(item => (\n                    <Card key={ kebabCase(item.frontmatter.title) }>\n                        <CardHeader>{ item.frontmatter.title }</CardHeader>\n                        <CardBody>\n                            <div dangerouslySetInnerHTML={{ __html: item.html }} />\n                        </CardBody>\n                    </Card>\n                ))\n            }\n\n        </PageContent>\n    )\n}\n\nexport default WorkPage\n","export * from './casing'\n"],"sourceRoot":""}